module.exports=function(t){"use strict";t.initConfig({pkg:t.file.readJSON("package.json"),concat:{dist:{files:{"dist/jquery.validate.js":["jquery.validate.js"],"dist/additional-methods.js":["additional-methods.js"]}}},uglify:{options:{preserveComments:!1,banner:'/*! <%= pkg.title || pkg.name %> - v<%= pkg.version %> - <%= grunt.template.today("m/d/yyyy") %>\\n<%= pkg.homepage ? "* " + pkg.homepage + "\\n" : "" %>* Copyright (c) <%= grunt.template.today("yyyy") %> <%= pkg.author.name %>; Licensed <%= _.pluck(pkg.licenses, "type").join(", ") %> */'},all:{files:{"dist/jquery.validate.min.js":["dist/jquery.validate.js"],"dist/additional-methods.min.js":["dist/additional-methods.js"]}}},zip:{dist:{src:["dist/additional-methods.js","dist/additional-methods.min.js","dist/jquery.validate.js","dist/jquery.validate.min.js","README.md","changelog.txt","grunt.js","package.json","demo/**/*.*","lib/**/*.*","localization/**/*.*","test/**/*.*"],dest:"dist/<%= pkg.name %>-<%= pkg.version %>.zip"},options:{zlib:{level:1}}},qunit:{files:["test/index.html"]},jshint:{options:{curly:!0,eqeqeq:!0,immed:!0,latedef:!0,newcap:!0,noarg:!0,sub:!0,undef:!0,eqnull:!0,browser:!0,globals:{jQuery:!0,$:!0,console:!0}},files:["jquery.validate.js","additional-methods.js","localization/*.js"],test:{options:{globals:{jQuery:!0,$:!0,QUnit:!0,module:!0,test:!0,start:!0,stop:!0,expect:!0,ok:!0,equal:!0,deepEqual:!0,strictEqual:!0}},files:{src:["test/test.js","test/rules.js","test/messages.js","test/methods.js"]}},grunt:{files:{src:["Gruntfile.js"]}}}}),t.loadNpmTasks("grunt-contrib-jshint"),t.loadNpmTasks("grunt-contrib-qunit"),t.loadNpmTasks("grunt-contrib-uglify"),t.loadNpmTasks("grunt-contrib-concat"),t.loadNpmTasks("grunt-zipstream"),t.registerTask("default",["jshint","qunit"]),t.registerTask("release",["default","concat","uglify","zip"])};